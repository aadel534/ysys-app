{"version":3,"sources":["utils/replaceEmptyStringWithUnknown.js","components/Header/SearchParameters.jsx","components/Header/HeaderComponent.jsx","components/Sidebar/SidebarComponent.jsx","components/Cards/HouseCard.jsx","components/Cards/CharacterCard.jsx","components/Cards/BookCard.jsx","components/Feed/FeedComponent.jsx","api/api.js","App.js","index.js"],"names":["module","exports","string","undefined","length","SearchParameters","props","handleChange","e","setSearchParams","target","value","searchMode","className","onChange","defaultValue","HeaderComponent","headerClass","expanded","useState","search","setSearch","onClick","setExpanded","onSubmit","preventDefault","placeholder","searchParams","type","SidebarComponent","handlePagination","id","console","log","pageNumber","setPageNumber","sidebarClass","setSearchMode","name","defaultChecked","htmlFor","setSearchNumber","href","HouseCard","house","replaceEmptyStringWithUnknown","region","founded","hasWords","words","CharacterCard","character","gender","culture","BookCard","book","author","dateString","substring","replace","formatDate","releaseDate","FeedComponent","feedClass","renderCard","x","aliases","authors","released","results","map","element","index","getData","searchNumber","searchQuery","a","apiCall","fetch","response","json","data","App","feedResults","setFeedResults","setSearchQuery","useEffect","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.108f2b13.chunk.js","sourcesContent":["const replaceEmptyStringWithUnknown = (string) => {\n    \n    if (string === undefined) {\n        return 'Unknown';\n    } \n    else if (string.length === 0) {\n        return 'Unknown';\n    }\n    else {\n        return string;\n    }\n};\n\nmodule.exports = replaceEmptyStringWithUnknown;","import React from 'react';\n\n// return a different element depending on the value of the search mode\nconst SearchParameters = (props) => {\n\n    const handleChange = (e) => {\n        props.setSearchParams(e.target.value);\n    };\n\n    switch (props.searchMode) {\n        case \"books\":\n            return (\n                <div className=\"search-params\" onChange={handleChange}>\n                    <label>search by</label>\n                    <select>\n                        <option value=\"name\" defaultValue>Name</option>\n                        <option value=\"fromReleaseDate\">Released after</option>\n                        <option value=\"toReleaseDate\">Released before</option>\n                    </select>\n                </div>\n            );\n            break;\n        case \"characters\":\n            return (\n                <div className=\"search-params\" onChange={handleChange}>\n                    <label>search by</label>\n                    <select>\n                        <option value=\"name\" defaultValue>Name</option>\n                        <option value=\"gender\">Gender</option>\n                        <option value=\"culture\">Culture</option>\n                    </select>\n                </div>\n            );\n            break;\n        case \"houses\":\n            return (\n                <div className=\"search-params\" onChange={handleChange}>\n                    <label>search by</label>\n                    <select>\n                        <option value=\"name\" defaultValue>Name</option>\n                        <option value=\"region\">Region</option>\n                        <option value=\"words\">Words</option>\n                    </select>\n                </div>\n            );\n            break;\n        default:\n            break;\n    }\n};\n\nexport default SearchParameters\n\n\n\n/*\n<div className=\"result-number\" onChange = {numberUpdate}>\n    <label>Number of results\n    <input list=\"browsers\" name=\"myBrowser\" placeholder=\"10\"/></label>\n    <datalist id=\"browsers\">\n        <option value=\"10\"/>\n        <option value=\"20\"/>\n        <option value=\"50\"/>\n    </datalist>\n</div>\n*/","import React, { useEffect, useState } from 'react';\nimport './HeaderComponent.css';\nimport SearchParameters from './SearchParameters';\n\nexport const HeaderComponent = (props) => {\n\n    // and object containing search bar placeholders for each type of search\n    const searchPlaceholders = {\n      \"booksname\": \"eg. A Game of Thrones\",\n      \"bookstoReleaseDate\": \"eg. 2005-01-01\",\n      \"booksfromReleaseDate\":\"eg. 2005-01-01\",\n      \"charactersname\": \"eg. Jon Snow\",\n      \"charactersgender\":\"eg. female\",\n      \"charactersculture\":\"eg. Braavosi\",\n      \"housesname\": \"eg. House Moss\",\n      \"housesregion\": \"eg. The North\",\n      \"houseswords\": \"eg. Winter is Coming\"\n    };\n\n    let headerClass = \"header\";\n    if (props.expanded) {\n        headerClass += \" expanded\";\n    }\n    else{\n        headerClass += \" collapsed\";\n    }\n\n    // updates class based on sidebar expansion state\n    const updateExpansion = (e) => {\n        props.setExpanded(props.expanded ? false : true);\n    };\n\n   // adding search bar functionality \n    const [search, setSearch] = useState('');\n    const handleChange = e => { setSearch(e.target.value)};\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      props.setSearch(search);    //updates the search hook, causing a rerender\n      setSearch(\"\");\n    }\n\n    return <header className={headerClass}>\n        <button className=\"filter-button\" onClick = {updateExpansion} >FILTERS</button>\n\n        <h1>An API of Ice and Fire</h1>\n\n        <div className=\"search-fields\">\n          <SearchParameters searchMode= {props.searchMode} setSearchParams = {props.setSearchParams}/>\n\n          <form onSubmit={handleSubmit} className=\"search-bar\"> \n              <input \n                className=\"search-form\" \n                placeholder={searchPlaceholders[props.searchMode + props.searchParams]}\n                type=\"text\" value={search} \n                onChange={handleChange}/> \n          </form>\n        </div>\n        \n    </header>\n};","import React from 'react'\nimport './SidebarComponent.css';\n\nexport const SidebarComponent = (props) => {\n\n    const searchUpdate = (e) => {\n        props.setSearchMode(e.target.value);\n    };\n\n    const numberUpdate = (e) => {\n        console.log(e.target.value);\n        props.setSearchNumber(e.target.value);\n    };\n\n    const handlePagination = (e) => {\n        if (e.target.id == \"next-page\") {\n            console.log(`from ${props.pageNumber} to ${props.pageNumber + 1}`);\n            props.setPageNumber(props.pageNumber+1);\n        }\n        else if (e.target.id == \"previous-page\" && props.pageNumber != 1) {\n            console.log(`from ${props.pageNumber} to ${props.pageNumber - 1}`);\n            props.setPageNumber(props.pageNumber-1);\n        }\n        else {\n            console.log(\"invalid pagination request\");\n        }\n    }\n    \n    let sidebarClass = \"sidebar\";\n    if (props.expanded) {\n        sidebarClass += \" expanded\";\n    }\n    else{\n        sidebarClass += \" collapsed\";\n    }\n    return <div className={sidebarClass}>\n        <div className=\"radio-box\" onChange = {searchUpdate}>\n\n            <div className=\"radio-section\">\n                <input type=\"radio\" id=\"books\" value=\"books\" name=\"searchmode\" defaultChecked />\n                <label htmlFor=\"books\">Books</label>\n            </div>\n            <div className=\"radio-section\">\n                <input type=\"radio\" id=\"characters\" value=\"characters\" name=\"searchmode\" />\n                <label htmlFor=\"characters\">Characters</label>\n            </div>\n            <div className=\"radio-section\">\n                <input type=\"radio\" id=\"houses\" value=\"houses\" name=\"searchmode\" />\n                <label htmlFor=\"houses\">Houses</label>\n            </div>\n        </div>\n\n        <div className=\"result-number\" onChange = {numberUpdate}>\n            <label><p>Results per page</p></label>\n            <select>\n                <option>10</option>\n                <option>20</option>\n                <option>50</option>\n            </select>\n            \n        </div>\n\n        <div className=\"pagination\">\n            <a href=\"#\" className=\"page previous round\" id=\"previous-page\" onClick={handlePagination}>&#8249;</a>\n            <p>Page {props.pageNumber}</p>\n            <a href=\"#\" className=\"page next round\" id=\"next-page\"onClick={handlePagination}>&#8250;</a>\n        </div>\n    </div>\n};","import React from 'react';\nimport './Card.css';\nimport replaceEmptyStringWithUnknown from './../../utils/replaceEmptyStringWithUnknown';\n\nexport const HouseCard = (house) => {\n    return <div>\n        <div className = \"container\">\n            <p className=\"title\">{replaceEmptyStringWithUnknown(house.name)}</p>\n            <p className=\"subtitle\">{replaceEmptyStringWithUnknown(house.region)}</p>\n            <p className=\"founded\">Founded: {replaceEmptyStringWithUnknown(house.founded)}</p>\n            <p className={\"words \" + house.hasWords}>{house.words}</p>\n        </div>\n    </div>\n};\n\nexport default HouseCard;","import React from 'react';\nimport './Card.css';\nimport replaceEmptyStringWithUnknown from './../../utils/replaceEmptyStringWithUnknown';\n\nexport const CharacterCard = (character) => {\n    return <div>\n        <div className = \"container\">\n            <p className = \"title\">{replaceEmptyStringWithUnknown(character.name)}</p>\n            <p className = \"subtitle\">{replaceEmptyStringWithUnknown(character.gender)}</p>\n            <p className = \"culture\">Culture: {replaceEmptyStringWithUnknown(character.culture)}</p>\n        </div>\n        \n    </div>\n};\n\nexport default CharacterCard","import React from 'react';\nimport './Card.css';\n\nexport const BookCard = (book) => {\n\n    // expecting an input of the format 1996-08-01T00:00:00\n    const formatDate = (dateString) => {\n        let string = \"\";\n        if (typeof dateString === 'undefined') {\n            string = dateString;\n        }\n        else {\n            string += dateString.substring(0,10);\n            string = string.replace(/-/g,'/');\n        }\n        return string;\n    }\n\n    return <div>\n        <div className=\"container\">\n            <p className = \"title\">{book.name}</p>\n            <p className = \"subtitle\">{book.author}</p>\n            <p className = \"release-date\">{formatDate(book.releaseDate)}</p>\n        </div>\n    </div>\n};\n\nexport default BookCard","import React from 'react'\nimport './FeedComponent.css';\nimport HouseCard from './../Cards/HouseCard';\nimport CharacterCard from './../Cards/CharacterCard';\nimport BookCard from './../Cards/BookCard';\n\nexport const FeedComponent = (props) => {\n\n    let feedClass = \"feed\";\n    if (props.expanded) {\n        feedClass += \" expanded\";\n    }\n    else{\n        feedClass += \" collapsed\";\n    }\n\n    const renderCard = (x) => {\n        switch (props.searchMode) {\n            case \"houses\":\n                return <HouseCard name = {x.name} \n                                    region = {x.region} \n                                    founded = {x.founded}\n                                    words = {x.words ? x.words : \"No Known Words\"}\n                                    hasWords = {x.words ? \"hasWords\" : \"noWords\"}/>\n            case \"characters\":\n                if(x.name.length === 0){        // if name is unknown, use first alias\n                    x.name = x.aliases[0];\n                }\n                return <CharacterCard aliases={x.aliases} \n                                        gender = {x.gender} \n                                        name={x.name}\n                                        culture = {x.culture}/>\n            case \"books\":\n                return <BookCard name={x.name} \n                            author={x.authors} \n                            releaseDate = {x.released}/>\n            default:\n                return <p>Loading...</p>\n        }\n    };\n    if (props.results.length == 0) {\n        return <div className = {feedClass}>\n            <p>No match found</p>\n        </div>\n    }\n    else {\n        return <div className={feedClass}>\n            {props.results.map( (element,index) => \n                <div key = {index} className=\"card\">\n                    {renderCard(element)}\n            </div>\n            )}\n        </div>\n    }\n};","// Api docs: https://anapioficeandfire.com/Documentation\n\nimport { getAllByPlaceholderText } from \"@testing-library/dom\";\n\nexport const getData = async (searchNumber, searchMode, searchQuery, searchParams, pageNumber) => {\n    const apiCall = `https://anapioficeandfire.com/api/${searchMode}?${searchParams}=${searchQuery}&page=${pageNumber}&pageSize=${searchNumber}`;\n    const response = await fetch(apiCall);\n    const data = await response.json();\n\n    if (typeof data === 'string') {     //API returns string on failed api call\n        console.log(\"error catch\");\n        return [];\n    }\n    else{\n        return data;\n    }\n};\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { HeaderComponent } from './components/Header/HeaderComponent';\nimport { SidebarComponent } from './components/Sidebar/SidebarComponent';\nimport { FeedComponent } from './components/Feed/FeedComponent';\nimport { getData } from './api/api';\n\nfunction App() {\n\n    const [expanded, setExpanded] = useState(true);\n    const [feedResults, setFeedResults] = useState([]);\n    const [searchMode, setSearchMode] = useState(\"books\");\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [searchNumber, setSearchNumber] = useState(\"12\");\n    const [searchParams, setSearchParams] = useState(\"name\");\n    const [pageNumber, setPageNumber] = useState(1);\n\n    useEffect( () => {\n        getData(searchNumber, searchMode, searchQuery, searchParams, pageNumber) \n        .then(data => setFeedResults(data))\n    } ,[searchNumber, searchMode, searchQuery, pageNumber]);\n\n    // TODO [STRETCH] - This could also include\n    //  * whether the app is fetching data (loading)\n    // TODO [STRETCH] - implement loading state and pass to FeedComponent\n    return (\n        <div className=\"app\">\n            <HeaderComponent    \n                search = {searchQuery} \n                setSearch = {setSearchQuery}\n                searchMode = {searchMode} \n                expanded = {expanded} \n                setExpanded = {setExpanded} \n                expanded = {expanded}\n                searchParams = {searchParams}\n                setSearchParams = {setSearchParams}/>\n            <SidebarComponent   \n                expanded = {expanded}\n                searchMode = {searchMode} \n                setSearchMode = {setSearchMode}\n                setSearchNumber = {setSearchNumber}\n                pageNumber = {pageNumber}\n                setPageNumber = {setPageNumber}/>\n            <FeedComponent      \n                expanded = {expanded} \n                searchMode = {searchMode} \n                results = {feedResults}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Generated by create-react-app\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}